spring:
  cloud:
    discovery:
      enabled: false
    config:
      enabled: false
  application:
    name: account-server
  liquibase:
    enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/wallet
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  kafka:
    bootstrap-servers: broker:29092
    producer:
      keySerializer: "org.apache.kafka.common.serialization.StringSerializer"
      valueSerializer: "io.confluent.kafka.serializers.KafkaAvroSerializer"
      properties:
        schema:
          registry:
            url: http://schema-registry:8081
    consumer:
      group-id: client-account-service-group
      keyDeserializer: "org.apache.kafka.common.serialization.StringDeserializer"
      valueDeserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
      properties:
        schema:
          registry:
            url: http://schema-registry:8081
        specific:
          avro:
            reader: "true"

kafka:
  topic:
    transaction: transaction_broker
    transfer: transfer_broker

eureka:
  instance:
    prefer-ip-address: false
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://discovery-server:8761/eureka
