pipeline {
    environment {
        registryCredential = 'docker_cred'
        userServiceImage = ''
    }
    agent any
    tools {
        gradle '8.5'
    }

    stages {
        stage('Build') {
            steps {
                sh 'gradle clean build'
            }
        }
        stage('SonarQube Analysis'){
            steps {
                withSonarQubeEnv("SonarQube") {
                  sh 'gradle sonar -D sonar.gradle.skipCompile=true'
                }
            }
        }
        stage('Quality Gate'){
            steps {
                timeout(time: 2, unit: 'MINUTES'){
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Building images') {
            steps {
                script {
                userServiceImage = docker.build("marymary88/user-service:1.0", "./user-service")
                }
            }
        }
        stage('Deploy images') {
            steps {
                script {
                   docker.withRegistry('', registryCredential) {
                        userServiceImage.push()
                   }
                }
            }
        }
        stage('Cleaning up') {
            steps {
                sh "docker system prune -f"
            }
        }
    }
}
